/**
 * The ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  </p>  <p>      First Steps:       <ol>          <li>Make sure you've <a href='/HomeV2/App/sign-up'>signed up to ChronoSheets</a> to get yourself a user account</li>          <li>Confirm your account by following the link sent to your email address.  This will activate your account</li>          <li>Use your username and password to obtain an Auth Token by using the DoLogin method inside the UserProfile section below.  Use the Auth Token as an argument to the other methods</li>          <li>Try different methods in the API Playground to learn about the API</li>          <li>If you're stuck, try the full getting started guide on the <a href='/Home/ApiDocs'>API Toolkit</a> page.</li>      </ol>  </p>  <p>      Further Steps:       <ul>          <li>Create a mobile app (iOS, Android or Windows) using one of the ChronoSheets Mobile SDKs</li>          <li>Create a custom integration with your app using one of the ChronoSheets API Client Libraries.</li>      </ul>      Read more about the API Toolkit on the <a href='/Home/ApiDocs'>API Toolkit</a> page.  </p></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ChronoSheetsClientLibModel;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Contains fields for creating a Trip
 **/
@ApiModel(description = "Contains fields for creating a Trip")
public class CSCreateTripRequest {
  
  @SerializedName("TimesheetId")
  private Integer timesheetId = null;
  @SerializedName("VehicleId")
  private Integer vehicleId = null;
  @SerializedName("PathCoordsStringCsv")
  private String pathCoordsStringCsv = null;
  @SerializedName("DistanceMeters")
  private Double distanceMeters = null;
  public enum MobilePlatformEnum {
     Unknown,  iOS,  Android, 
  };
  @SerializedName("MobilePlatform")
  private MobilePlatformEnum mobilePlatform = null;

  /**
   * The associated Timesheet record Id.  The Trip will be linked to the Timesheet with this TimesheetId
   **/
  @ApiModelProperty(value = "The associated Timesheet record Id.  The Trip will be linked to the Timesheet with this TimesheetId")
  public Integer getTimesheetId() {
    return timesheetId;
  }
  public void setTimesheetId(Integer timesheetId) {
    this.timesheetId = timesheetId;
  }

  /**
   * The associated Vehicle Id.  The Trip will show that this Vehicle was used
   **/
  @ApiModelProperty(value = "The associated Vehicle Id.  The Trip will show that this Vehicle was used")
  public Integer getVehicleId() {
    return vehicleId;
  }
  public void setVehicleId(Integer vehicleId) {
    this.vehicleId = vehicleId;
  }

  /**
   * A CSV of GPS path co-ordinates.  Format example: -37.8433562,144.7226188;[Lat1],[Long1];........[LatN],[LongN]
   **/
  @ApiModelProperty(value = "A CSV of GPS path co-ordinates.  Format example: -37.8433562,144.7226188;[Lat1],[Long1];........[LatN],[LongN]")
  public String getPathCoordsStringCsv() {
    return pathCoordsStringCsv;
  }
  public void setPathCoordsStringCsv(String pathCoordsStringCsv) {
    this.pathCoordsStringCsv = pathCoordsStringCsv;
  }

  /**
   * The total distance of the Trip
   **/
  @ApiModelProperty(value = "The total distance of the Trip")
  public Double getDistanceMeters() {
    return distanceMeters;
  }
  public void setDistanceMeters(Double distanceMeters) {
    this.distanceMeters = distanceMeters;
  }

  /**
   * The Mobile platform that the Trip was recorded on
   **/
  @ApiModelProperty(value = "The Mobile platform that the Trip was recorded on")
  public MobilePlatformEnum getMobilePlatform() {
    return mobilePlatform;
  }
  public void setMobilePlatform(MobilePlatformEnum mobilePlatform) {
    this.mobilePlatform = mobilePlatform;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSCreateTripRequest createTripRequest = (CSCreateTripRequest) o;
    return (this.timesheetId == null ? createTripRequest.timesheetId == null : this.timesheetId.equals(createTripRequest.timesheetId)) &&
        (this.vehicleId == null ? createTripRequest.vehicleId == null : this.vehicleId.equals(createTripRequest.vehicleId)) &&
        (this.pathCoordsStringCsv == null ? createTripRequest.pathCoordsStringCsv == null : this.pathCoordsStringCsv.equals(createTripRequest.pathCoordsStringCsv)) &&
        (this.distanceMeters == null ? createTripRequest.distanceMeters == null : this.distanceMeters.equals(createTripRequest.distanceMeters)) &&
        (this.mobilePlatform == null ? createTripRequest.mobilePlatform == null : this.mobilePlatform.equals(createTripRequest.mobilePlatform));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.timesheetId == null ? 0: this.timesheetId.hashCode());
    result = 31 * result + (this.vehicleId == null ? 0: this.vehicleId.hashCode());
    result = 31 * result + (this.pathCoordsStringCsv == null ? 0: this.pathCoordsStringCsv.hashCode());
    result = 31 * result + (this.distanceMeters == null ? 0: this.distanceMeters.hashCode());
    result = 31 * result + (this.mobilePlatform == null ? 0: this.mobilePlatform.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSCreateTripRequest {\n");
    
    sb.append("  timesheetId: ").append(timesheetId).append("\n");
    sb.append("  vehicleId: ").append(vehicleId).append("\n");
    sb.append("  pathCoordsStringCsv: ").append(pathCoordsStringCsv).append("\n");
    sb.append("  distanceMeters: ").append(distanceMeters).append("\n");
    sb.append("  mobilePlatform: ").append(mobilePlatform).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
