/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ChronoSheetsClientLibModel;

import ChronoSheetsClientLibModel.CSTimeSlot;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CSUsualHoursDay {
  
  public enum DayTypeEnum {
     Monday,  Tuesday,  Wednesday,  Thursday,  Friday,  Saturday,  Sunday, 
  };
  @SerializedName("DayType")
  private DayTypeEnum dayType = null;
  @SerializedName("TimeSlots")
  private List<CSTimeSlot> timeSlots = null;
  @SerializedName("DeleteUsualHours")
  private List<Integer> deleteUsualHours = null;

  /**
   * Specify which day this collection of Roster timeslots is for (Monday-Sunday)
   **/
  @ApiModelProperty(value = "Specify which day this collection of Roster timeslots is for (Monday-Sunday)")
  public DayTypeEnum getDayType() {
    return dayType;
  }
  public void setDayType(DayTypeEnum dayType) {
    this.dayType = dayType;
  }

  /**
   * A collection of TimeSlots within this day
   **/
  @ApiModelProperty(value = "A collection of TimeSlots within this day")
  public List<CSTimeSlot> getTimeSlots() {
    return timeSlots;
  }
  public void setTimeSlots(List<CSTimeSlot> timeSlots) {
    this.timeSlots = timeSlots;
  }

  /**
   * Mark here which existing UsualHours are to be deleted
   **/
  @ApiModelProperty(value = "Mark here which existing UsualHours are to be deleted")
  public List<Integer> getDeleteUsualHours() {
    return deleteUsualHours;
  }
  public void setDeleteUsualHours(List<Integer> deleteUsualHours) {
    this.deleteUsualHours = deleteUsualHours;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSUsualHoursDay usualHoursDay = (CSUsualHoursDay) o;
    return (this.dayType == null ? usualHoursDay.dayType == null : this.dayType.equals(usualHoursDay.dayType)) &&
        (this.timeSlots == null ? usualHoursDay.timeSlots == null : this.timeSlots.equals(usualHoursDay.timeSlots)) &&
        (this.deleteUsualHours == null ? usualHoursDay.deleteUsualHours == null : this.deleteUsualHours.equals(usualHoursDay.deleteUsualHours));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.dayType == null ? 0: this.dayType.hashCode());
    result = 31 * result + (this.timeSlots == null ? 0: this.timeSlots.hashCode());
    result = 31 * result + (this.deleteUsualHours == null ? 0: this.deleteUsualHours.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSUsualHoursDay {\n");
    
    sb.append("  dayType: ").append(dayType).append("\n");
    sb.append("  timeSlots: ").append(timeSlots).append("\n");
    sb.append("  deleteUsualHours: ").append(deleteUsualHours).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
