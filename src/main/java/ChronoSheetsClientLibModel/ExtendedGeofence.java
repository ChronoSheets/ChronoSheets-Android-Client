/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ChronoSheetsClientLibModel;

import ChronoSheetsClientLibModel.BasicCoordinate;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * An extended geofence record
 **/
@ApiModel(description = "An extended geofence record")
public class ExtendedGeofence {
  
  @SerializedName("JobCode")
  private String jobCode = null;
  @SerializedName("TaskName")
  private String taskName = null;
  @SerializedName("CreatedBy")
  private String createdBy = null;
  @SerializedName("UpdatedBy")
  private String updatedBy = null;
  @SerializedName("AlertOrganisation")
  private String alertOrganisation = null;
  @SerializedName("GeoFencingId")
  private Integer geoFencingId = null;
  @SerializedName("OrgId")
  private Integer orgId = null;
  @SerializedName("CreatedByUserId")
  private Integer createdByUserId = null;
  @SerializedName("LastUpdatedByUserId")
  private Integer lastUpdatedByUserId = null;
  @SerializedName("Name")
  private String name = null;
  @SerializedName("LocationName")
  private String locationName = null;
  @SerializedName("Coordinates")
  private List<BasicCoordinate> coordinates = null;
  @SerializedName("CreatedAt")
  private Date createdAt = null;
  @SerializedName("UpdatedAt")
  private Date updatedAt = null;
  @SerializedName("TriggerJobCodeId")
  private Integer triggerJobCodeId = null;
  @SerializedName("TriggerTaskId")
  private Integer triggerTaskId = null;
  public enum TriggerSettingsEnum {
     None,  StartTimesheetWhenEntering,  StopTimesheetWhenEntering,  StartOnEnterStopOnLeave, 
  };
  @SerializedName("TriggerSettings")
  private TriggerSettingsEnum triggerSettings = null;
  @SerializedName("AlertToOrgGroupId")
  private Integer alertToOrgGroupId = null;
  public enum AlertSettingsEnum {
     None,  SendWhenEntering,  SendWhenExiting,  SendWhenEnteringOrExiting, 
  };
  @SerializedName("AlertSettings")
  private AlertSettingsEnum alertSettings = null;
  @SerializedName("StartTimeHour")
  private Integer startTimeHour = null;
  @SerializedName("StartTimeMinute")
  private Integer startTimeMinute = null;
  @SerializedName("EndTimeHour")
  private Integer endTimeHour = null;
  @SerializedName("EndTimeMinute")
  private Integer endTimeMinute = null;

  /**
   * The Job code used when the employee enters/exits the geofence
   **/
  @ApiModelProperty(value = "The Job code used when the employee enters/exits the geofence")
  public String getJobCode() {
    return jobCode;
  }
  public void setJobCode(String jobCode) {
    this.jobCode = jobCode;
  }

  /**
   * The name of the task used when the employee enters/exits the geofence
   **/
  @ApiModelProperty(value = "The name of the task used when the employee enters/exits the geofence")
  public String getTaskName() {
    return taskName;
  }
  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }

  /**
   * The name of the employee who created the geofence
   **/
  @ApiModelProperty(value = "The name of the employee who created the geofence")
  public String getCreatedBy() {
    return createdBy;
  }
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  /**
   * The name of the employee who last updated the geofence
   **/
  @ApiModelProperty(value = "The name of the employee who last updated the geofence")
  public String getUpdatedBy() {
    return updatedBy;
  }
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  /**
   * The name of the organisation group who will be notified when the geofence is triggered
   **/
  @ApiModelProperty(value = "The name of the organisation group who will be notified when the geofence is triggered")
  public String getAlertOrganisation() {
    return alertOrganisation;
  }
  public void setAlertOrganisation(String alertOrganisation) {
    this.alertOrganisation = alertOrganisation;
  }

  /**
   * The ID of the geofence
   **/
  @ApiModelProperty(value = "The ID of the geofence")
  public Integer getGeoFencingId() {
    return geoFencingId;
  }
  public void setGeoFencingId(Integer geoFencingId) {
    this.geoFencingId = geoFencingId;
  }

  /**
   * The ID of the organisation owning the geofence record
   **/
  @ApiModelProperty(value = "The ID of the organisation owning the geofence record")
  public Integer getOrgId() {
    return orgId;
  }
  public void setOrgId(Integer orgId) {
    this.orgId = orgId;
  }

  /**
   * The ID of the user/employee who created the geofence
   **/
  @ApiModelProperty(value = "The ID of the user/employee who created the geofence")
  public Integer getCreatedByUserId() {
    return createdByUserId;
  }
  public void setCreatedByUserId(Integer createdByUserId) {
    this.createdByUserId = createdByUserId;
  }

  /**
   * The ID of the user/employee who last updated the geofence
   **/
  @ApiModelProperty(value = "The ID of the user/employee who last updated the geofence")
  public Integer getLastUpdatedByUserId() {
    return lastUpdatedByUserId;
  }
  public void setLastUpdatedByUserId(Integer lastUpdatedByUserId) {
    this.lastUpdatedByUserId = lastUpdatedByUserId;
  }

  /**
   * A descriptive name of the geofence
   **/
  @ApiModelProperty(value = "A descriptive name of the geofence")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The name of the approx. location of the geofence
   **/
  @ApiModelProperty(value = "The name of the approx. location of the geofence")
  public String getLocationName() {
    return locationName;
  }
  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }

  /**
   * A list of co-ordinates specifying the geofence
   **/
  @ApiModelProperty(value = "A list of co-ordinates specifying the geofence")
  public List<BasicCoordinate> getCoordinates() {
    return coordinates;
  }
  public void setCoordinates(List<BasicCoordinate> coordinates) {
    this.coordinates = coordinates;
  }

  /**
   * The date and time the geofence was created.  Time is in UTC.
   **/
  @ApiModelProperty(value = "The date and time the geofence was created.  Time is in UTC.")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * The date and time the geofence was updated last.  Time is in UTC.
   **/
  @ApiModelProperty(value = "The date and time the geofence was updated last.  Time is in UTC.")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  /**
   * The ID of the job code used when the employee enters/exits the geofence
   **/
  @ApiModelProperty(value = "The ID of the job code used when the employee enters/exits the geofence")
  public Integer getTriggerJobCodeId() {
    return triggerJobCodeId;
  }
  public void setTriggerJobCodeId(Integer triggerJobCodeId) {
    this.triggerJobCodeId = triggerJobCodeId;
  }

  /**
   * The ID of the task used when the employee enters/exits the geofence
   **/
  @ApiModelProperty(value = "The ID of the task used when the employee enters/exits the geofence")
  public Integer getTriggerTaskId() {
    return triggerTaskId;
  }
  public void setTriggerTaskId(Integer triggerTaskId) {
    this.triggerTaskId = triggerTaskId;
  }

  /**
   * The settings for triggering actions
   **/
  @ApiModelProperty(value = "The settings for triggering actions")
  public TriggerSettingsEnum getTriggerSettings() {
    return triggerSettings;
  }
  public void setTriggerSettings(TriggerSettingsEnum triggerSettings) {
    this.triggerSettings = triggerSettings;
  }

  /**
   * The organisation group that will be notified when the geofence is triggered
   **/
  @ApiModelProperty(value = "The organisation group that will be notified when the geofence is triggered")
  public Integer getAlertToOrgGroupId() {
    return alertToOrgGroupId;
  }
  public void setAlertToOrgGroupId(Integer alertToOrgGroupId) {
    this.alertToOrgGroupId = alertToOrgGroupId;
  }

  /**
   * The settings for trigger alerts
   **/
  @ApiModelProperty(value = "The settings for trigger alerts")
  public AlertSettingsEnum getAlertSettings() {
    return alertSettings;
  }
  public void setAlertSettings(AlertSettingsEnum alertSettings) {
    this.alertSettings = alertSettings;
  }

  /**
   * The hour start time. E.g. 13 would be 1pm.  Time is in 24hr format.
   **/
  @ApiModelProperty(value = "The hour start time. E.g. 13 would be 1pm.  Time is in 24hr format.")
  public Integer getStartTimeHour() {
    return startTimeHour;
  }
  public void setStartTimeHour(Integer startTimeHour) {
    this.startTimeHour = startTimeHour;
  }

  /**
   * The minute start time.  E.g. 46 would be the 46th minute of the hour.
   **/
  @ApiModelProperty(value = "The minute start time.  E.g. 46 would be the 46th minute of the hour.")
  public Integer getStartTimeMinute() {
    return startTimeMinute;
  }
  public void setStartTimeMinute(Integer startTimeMinute) {
    this.startTimeMinute = startTimeMinute;
  }

  /**
   * The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.
   **/
  @ApiModelProperty(value = "The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.")
  public Integer getEndTimeHour() {
    return endTimeHour;
  }
  public void setEndTimeHour(Integer endTimeHour) {
    this.endTimeHour = endTimeHour;
  }

  /**
   * The minute end time.  E.g. 13 would be the 13th minute of the hour.
   **/
  @ApiModelProperty(value = "The minute end time.  E.g. 13 would be the 13th minute of the hour.")
  public Integer getEndTimeMinute() {
    return endTimeMinute;
  }
  public void setEndTimeMinute(Integer endTimeMinute) {
    this.endTimeMinute = endTimeMinute;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedGeofence extendedGeofence = (ExtendedGeofence) o;
    return (this.jobCode == null ? extendedGeofence.jobCode == null : this.jobCode.equals(extendedGeofence.jobCode)) &&
        (this.taskName == null ? extendedGeofence.taskName == null : this.taskName.equals(extendedGeofence.taskName)) &&
        (this.createdBy == null ? extendedGeofence.createdBy == null : this.createdBy.equals(extendedGeofence.createdBy)) &&
        (this.updatedBy == null ? extendedGeofence.updatedBy == null : this.updatedBy.equals(extendedGeofence.updatedBy)) &&
        (this.alertOrganisation == null ? extendedGeofence.alertOrganisation == null : this.alertOrganisation.equals(extendedGeofence.alertOrganisation)) &&
        (this.geoFencingId == null ? extendedGeofence.geoFencingId == null : this.geoFencingId.equals(extendedGeofence.geoFencingId)) &&
        (this.orgId == null ? extendedGeofence.orgId == null : this.orgId.equals(extendedGeofence.orgId)) &&
        (this.createdByUserId == null ? extendedGeofence.createdByUserId == null : this.createdByUserId.equals(extendedGeofence.createdByUserId)) &&
        (this.lastUpdatedByUserId == null ? extendedGeofence.lastUpdatedByUserId == null : this.lastUpdatedByUserId.equals(extendedGeofence.lastUpdatedByUserId)) &&
        (this.name == null ? extendedGeofence.name == null : this.name.equals(extendedGeofence.name)) &&
        (this.locationName == null ? extendedGeofence.locationName == null : this.locationName.equals(extendedGeofence.locationName)) &&
        (this.coordinates == null ? extendedGeofence.coordinates == null : this.coordinates.equals(extendedGeofence.coordinates)) &&
        (this.createdAt == null ? extendedGeofence.createdAt == null : this.createdAt.equals(extendedGeofence.createdAt)) &&
        (this.updatedAt == null ? extendedGeofence.updatedAt == null : this.updatedAt.equals(extendedGeofence.updatedAt)) &&
        (this.triggerJobCodeId == null ? extendedGeofence.triggerJobCodeId == null : this.triggerJobCodeId.equals(extendedGeofence.triggerJobCodeId)) &&
        (this.triggerTaskId == null ? extendedGeofence.triggerTaskId == null : this.triggerTaskId.equals(extendedGeofence.triggerTaskId)) &&
        (this.triggerSettings == null ? extendedGeofence.triggerSettings == null : this.triggerSettings.equals(extendedGeofence.triggerSettings)) &&
        (this.alertToOrgGroupId == null ? extendedGeofence.alertToOrgGroupId == null : this.alertToOrgGroupId.equals(extendedGeofence.alertToOrgGroupId)) &&
        (this.alertSettings == null ? extendedGeofence.alertSettings == null : this.alertSettings.equals(extendedGeofence.alertSettings)) &&
        (this.startTimeHour == null ? extendedGeofence.startTimeHour == null : this.startTimeHour.equals(extendedGeofence.startTimeHour)) &&
        (this.startTimeMinute == null ? extendedGeofence.startTimeMinute == null : this.startTimeMinute.equals(extendedGeofence.startTimeMinute)) &&
        (this.endTimeHour == null ? extendedGeofence.endTimeHour == null : this.endTimeHour.equals(extendedGeofence.endTimeHour)) &&
        (this.endTimeMinute == null ? extendedGeofence.endTimeMinute == null : this.endTimeMinute.equals(extendedGeofence.endTimeMinute));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.jobCode == null ? 0: this.jobCode.hashCode());
    result = 31 * result + (this.taskName == null ? 0: this.taskName.hashCode());
    result = 31 * result + (this.createdBy == null ? 0: this.createdBy.hashCode());
    result = 31 * result + (this.updatedBy == null ? 0: this.updatedBy.hashCode());
    result = 31 * result + (this.alertOrganisation == null ? 0: this.alertOrganisation.hashCode());
    result = 31 * result + (this.geoFencingId == null ? 0: this.geoFencingId.hashCode());
    result = 31 * result + (this.orgId == null ? 0: this.orgId.hashCode());
    result = 31 * result + (this.createdByUserId == null ? 0: this.createdByUserId.hashCode());
    result = 31 * result + (this.lastUpdatedByUserId == null ? 0: this.lastUpdatedByUserId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.locationName == null ? 0: this.locationName.hashCode());
    result = 31 * result + (this.coordinates == null ? 0: this.coordinates.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    result = 31 * result + (this.triggerJobCodeId == null ? 0: this.triggerJobCodeId.hashCode());
    result = 31 * result + (this.triggerTaskId == null ? 0: this.triggerTaskId.hashCode());
    result = 31 * result + (this.triggerSettings == null ? 0: this.triggerSettings.hashCode());
    result = 31 * result + (this.alertToOrgGroupId == null ? 0: this.alertToOrgGroupId.hashCode());
    result = 31 * result + (this.alertSettings == null ? 0: this.alertSettings.hashCode());
    result = 31 * result + (this.startTimeHour == null ? 0: this.startTimeHour.hashCode());
    result = 31 * result + (this.startTimeMinute == null ? 0: this.startTimeMinute.hashCode());
    result = 31 * result + (this.endTimeHour == null ? 0: this.endTimeHour.hashCode());
    result = 31 * result + (this.endTimeMinute == null ? 0: this.endTimeMinute.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedGeofence {\n");
    
    sb.append("  jobCode: ").append(jobCode).append("\n");
    sb.append("  taskName: ").append(taskName).append("\n");
    sb.append("  createdBy: ").append(createdBy).append("\n");
    sb.append("  updatedBy: ").append(updatedBy).append("\n");
    sb.append("  alertOrganisation: ").append(alertOrganisation).append("\n");
    sb.append("  geoFencingId: ").append(geoFencingId).append("\n");
    sb.append("  orgId: ").append(orgId).append("\n");
    sb.append("  createdByUserId: ").append(createdByUserId).append("\n");
    sb.append("  lastUpdatedByUserId: ").append(lastUpdatedByUserId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  locationName: ").append(locationName).append("\n");
    sb.append("  coordinates: ").append(coordinates).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("  triggerJobCodeId: ").append(triggerJobCodeId).append("\n");
    sb.append("  triggerTaskId: ").append(triggerTaskId).append("\n");
    sb.append("  triggerSettings: ").append(triggerSettings).append("\n");
    sb.append("  alertToOrgGroupId: ").append(alertToOrgGroupId).append("\n");
    sb.append("  alertSettings: ").append(alertSettings).append("\n");
    sb.append("  startTimeHour: ").append(startTimeHour).append("\n");
    sb.append("  startTimeMinute: ").append(startTimeMinute).append("\n");
    sb.append("  endTimeHour: ").append(endTimeHour).append("\n");
    sb.append("  endTimeMinute: ").append(endTimeMinute).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
