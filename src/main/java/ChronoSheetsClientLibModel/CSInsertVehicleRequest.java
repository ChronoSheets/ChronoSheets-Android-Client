/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ChronoSheetsClientLibModel;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Fields for inserting a new Vehicle
 **/
@ApiModel(description = "Fields for inserting a new Vehicle")
public class CSInsertVehicleRequest {
  
  @SerializedName("Name")
  private String name = null;
  @SerializedName("CostPerKilometer")
  private Double costPerKilometer = null;
  @SerializedName("Make")
  private String make = null;
  @SerializedName("Model")
  private String model = null;
  @SerializedName("Year")
  private String year = null;
  @SerializedName("LicencePlateNumber")
  private String licencePlateNumber = null;
  @SerializedName("LinkedOrgGroupIds")
  private List<Integer> linkedOrgGroupIds = null;

  /**
   * The Name of the Vehicle
   **/
  @ApiModelProperty(value = "The Name of the Vehicle")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The fuel cost / running cost of the Vehicle, measured per kilometer
   **/
  @ApiModelProperty(value = "The fuel cost / running cost of the Vehicle, measured per kilometer")
  public Double getCostPerKilometer() {
    return costPerKilometer;
  }
  public void setCostPerKilometer(Double costPerKilometer) {
    this.costPerKilometer = costPerKilometer;
  }

  /**
   * The make of the Vehicle
   **/
  @ApiModelProperty(value = "The make of the Vehicle")
  public String getMake() {
    return make;
  }
  public void setMake(String make) {
    this.make = make;
  }

  /**
   * The model of the Vehicle
   **/
  @ApiModelProperty(value = "The model of the Vehicle")
  public String getModel() {
    return model;
  }
  public void setModel(String model) {
    this.model = model;
  }

  /**
   * The year the Vehicle was made
   **/
  @ApiModelProperty(value = "The year the Vehicle was made")
  public String getYear() {
    return year;
  }
  public void setYear(String year) {
    this.year = year;
  }

  /**
   * The Licence Plate Number of the Vehicle
   **/
  @ApiModelProperty(value = "The Licence Plate Number of the Vehicle")
  public String getLicencePlateNumber() {
    return licencePlateNumber;
  }
  public void setLicencePlateNumber(String licencePlateNumber) {
    this.licencePlateNumber = licencePlateNumber;
  }

  /**
   * Optionally restrict this Vehicle to only be available to employees within these Organisation Groups
   **/
  @ApiModelProperty(value = "Optionally restrict this Vehicle to only be available to employees within these Organisation Groups")
  public List<Integer> getLinkedOrgGroupIds() {
    return linkedOrgGroupIds;
  }
  public void setLinkedOrgGroupIds(List<Integer> linkedOrgGroupIds) {
    this.linkedOrgGroupIds = linkedOrgGroupIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSInsertVehicleRequest insertVehicleRequest = (CSInsertVehicleRequest) o;
    return (this.name == null ? insertVehicleRequest.name == null : this.name.equals(insertVehicleRequest.name)) &&
        (this.costPerKilometer == null ? insertVehicleRequest.costPerKilometer == null : this.costPerKilometer.equals(insertVehicleRequest.costPerKilometer)) &&
        (this.make == null ? insertVehicleRequest.make == null : this.make.equals(insertVehicleRequest.make)) &&
        (this.model == null ? insertVehicleRequest.model == null : this.model.equals(insertVehicleRequest.model)) &&
        (this.year == null ? insertVehicleRequest.year == null : this.year.equals(insertVehicleRequest.year)) &&
        (this.licencePlateNumber == null ? insertVehicleRequest.licencePlateNumber == null : this.licencePlateNumber.equals(insertVehicleRequest.licencePlateNumber)) &&
        (this.linkedOrgGroupIds == null ? insertVehicleRequest.linkedOrgGroupIds == null : this.linkedOrgGroupIds.equals(insertVehicleRequest.linkedOrgGroupIds));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.costPerKilometer == null ? 0: this.costPerKilometer.hashCode());
    result = 31 * result + (this.make == null ? 0: this.make.hashCode());
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.year == null ? 0: this.year.hashCode());
    result = 31 * result + (this.licencePlateNumber == null ? 0: this.licencePlateNumber.hashCode());
    result = 31 * result + (this.linkedOrgGroupIds == null ? 0: this.linkedOrgGroupIds.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSInsertVehicleRequest {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  costPerKilometer: ").append(costPerKilometer).append("\n");
    sb.append("  make: ").append(make).append("\n");
    sb.append("  model: ").append(model).append("\n");
    sb.append("  year: ").append(year).append("\n");
    sb.append("  licencePlateNumber: ").append(licencePlateNumber).append("\n");
    sb.append("  linkedOrgGroupIds: ").append(linkedOrgGroupIds).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
