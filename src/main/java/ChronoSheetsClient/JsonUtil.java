/**
 * ChronoSheets API
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ChronoSheetsClient;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import ChronoSheetsClientLibModel.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CsApiAggregateJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiAggregateJobCode>>(){}.getType();
    }
    
    if ("CsApiAggregateJobTask".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiAggregateJobTask>>(){}.getType();
    }
    
    if ("CsApiApiResponseBoolean".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseBoolean>>(){}.getType();
    }
    
    if ("CsApiApiResponseClient".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseClient>>(){}.getType();
    }
    
    if ("CsApiApiResponseCombinedReportsData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseCombinedReportsData>>(){}.getType();
    }
    
    if ("CsApiApiResponseDoLoginResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseDoLoginResponse>>(){}.getType();
    }
    
    if ("CsApiApiResponseFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseFleetVehicle>>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListOrgReportTimesheetFileAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseForPaginatedListOrgReportTimesheetFileAttachment>>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListOrgReportTrip".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseForPaginatedListOrgReportTrip>>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListRawReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseForPaginatedListRawReportItem>>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListTrip".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseForPaginatedListTrip>>(){}.getType();
    }
    
    if ("CsApiApiResponseInsertUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseInsertUserResponse>>(){}.getType();
    }
    
    if ("CsApiApiResponseInt32".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseInt32>>(){}.getType();
    }
    
    if ("CsApiApiResponseJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseJobCode>>(){}.getType();
    }
    
    if ("CsApiApiResponseListAggregateJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListAggregateJobCode>>(){}.getType();
    }
    
    if ("CsApiApiResponseListClient".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListClient>>(){}.getType();
    }
    
    if ("CsApiApiResponseListFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListFleetVehicle>>(){}.getType();
    }
    
    if ("CsApiApiResponseListInt32".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListInt32>>(){}.getType();
    }
    
    if ("CsApiApiResponseListJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListJobCode>>(){}.getType();
    }
    
    if ("CsApiApiResponseListJobSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListJobSeriesReportItem>>(){}.getType();
    }
    
    if ("CsApiApiResponseListOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListOrganisationGroup>>(){}.getType();
    }
    
    if ("CsApiApiResponseListProject".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListProject>>(){}.getType();
    }
    
    if ("CsApiApiResponseListProjectCostingReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListProjectCostingReportItem>>(){}.getType();
    }
    
    if ("CsApiApiResponseListTimesheet".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListTimesheet>>(){}.getType();
    }
    
    if ("CsApiApiResponseListTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListTimesheetTask>>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListUserForManagement>>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserHourlyRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListUserHourlyRate>>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserJobFavourite".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListUserJobFavourite>>(){}.getType();
    }
    
    if ("CsApiApiResponseListUsualHoursDay".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseListUsualHoursDay>>(){}.getType();
    }
    
    if ("CsApiApiResponseOrganisation".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseOrganisation>>(){}.getType();
    }
    
    if ("CsApiApiResponseOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseOrganisationGroup>>(){}.getType();
    }
    
    if ("CsApiApiResponseProject".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseProject>>(){}.getType();
    }
    
    if ("CsApiApiResponseSignupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseSignupResponse>>(){}.getType();
    }
    
    if ("CsApiApiResponseTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseTimesheetTask>>(){}.getType();
    }
    
    if ("CsApiApiResponseTrip".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseTrip>>(){}.getType();
    }
    
    if ("CsApiApiResponseUpdateOrganisationResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseUpdateOrganisationResponse>>(){}.getType();
    }
    
    if ("CsApiApiResponseUpdateUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseUpdateUserResponse>>(){}.getType();
    }
    
    if ("CsApiApiResponseUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseUserForManagement>>(){}.getType();
    }
    
    if ("CsApiApiResponseUserProfile".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiApiResponseUserProfile>>(){}.getType();
    }
    
    if ("CsApiBatchUpdateTimesheetRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiBatchUpdateTimesheetRequest>>(){}.getType();
    }
    
    if ("CsApiClient".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiClient>>(){}.getType();
    }
    
    if ("CsApiClientSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiClientSeriesReportItem>>(){}.getType();
    }
    
    if ("CsApiClientSideUser".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiClientSideUser>>(){}.getType();
    }
    
    if ("CsApiClientTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiClientTotalsReportItem>>(){}.getType();
    }
    
    if ("CsApiCombinedReportsData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiCombinedReportsData>>(){}.getType();
    }
    
    if ("CsApiCreateTripRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiCreateTripRequest>>(){}.getType();
    }
    
    if ("CsApiDoLoginRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiDoLoginRequest>>(){}.getType();
    }
    
    if ("CsApiDoLoginResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiDoLoginResponse>>(){}.getType();
    }
    
    if ("CsApiFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiFleetVehicle>>(){}.getType();
    }
    
    if ("CsApiInsertClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertClientRequest>>(){}.getType();
    }
    
    if ("CsApiInsertJobCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertJobCodeRequest>>(){}.getType();
    }
    
    if ("CsApiInsertOrganisationGroupRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertOrganisationGroupRequest>>(){}.getType();
    }
    
    if ("CsApiInsertProjectRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertProjectRequest>>(){}.getType();
    }
    
    if ("CsApiInsertTaskRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertTaskRequest>>(){}.getType();
    }
    
    if ("CsApiInsertUserHourlyRateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertUserHourlyRateRequest>>(){}.getType();
    }
    
    if ("CsApiInsertUserJobFavouriteRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertUserJobFavouriteRequest>>(){}.getType();
    }
    
    if ("CsApiInsertUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertUserRequest>>(){}.getType();
    }
    
    if ("CsApiInsertUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertUserResponse>>(){}.getType();
    }
    
    if ("CsApiInsertVehicleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiInsertVehicleRequest>>(){}.getType();
    }
    
    if ("CsApiJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiJobCode>>(){}.getType();
    }
    
    if ("CsApiJobSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiJobSeriesReportItem>>(){}.getType();
    }
    
    if ("CsApiJobTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiJobTotalsReportItem>>(){}.getType();
    }
    
    if ("CsApiOrgReportTimesheetFileAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiOrgReportTimesheetFileAttachment>>(){}.getType();
    }
    
    if ("CsApiOrgReportTrip".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiOrgReportTrip>>(){}.getType();
    }
    
    if ("CsApiOrganisation".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiOrganisation>>(){}.getType();
    }
    
    if ("CsApiOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiOrganisationGroup>>(){}.getType();
    }
    
    if ("CsApiProject".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiProject>>(){}.getType();
    }
    
    if ("CsApiProjectCostingReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiProjectCostingReportItem>>(){}.getType();
    }
    
    if ("CsApiProjectSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiProjectSeriesReportItem>>(){}.getType();
    }
    
    if ("CsApiProjectTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiProjectTotalsReportItem>>(){}.getType();
    }
    
    if ("CsApiRawReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiRawReportItem>>(){}.getType();
    }
    
    if ("CsApiSaveClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSaveClientRequest>>(){}.getType();
    }
    
    if ("CsApiSaveOrganisationGroupRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSaveOrganisationGroupRequest>>(){}.getType();
    }
    
    if ("CsApiSaveVehicleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSaveVehicleRequest>>(){}.getType();
    }
    
    if ("CsApiSetOrganisationGroupUsersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSetOrganisationGroupUsersRequest>>(){}.getType();
    }
    
    if ("CsApiSetUsualHoursRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSetUsualHoursRequest>>(){}.getType();
    }
    
    if ("CsApiSignupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiSignupResponse>>(){}.getType();
    }
    
    if ("CsApiTaskSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTaskSeriesReportItem>>(){}.getType();
    }
    
    if ("CsApiTaskTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTaskTotalsReportItem>>(){}.getType();
    }
    
    if ("CsApiTimeSlot".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTimeSlot>>(){}.getType();
    }
    
    if ("CsApiTimesheet".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTimesheet>>(){}.getType();
    }
    
    if ("CsApiTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTimesheetTask>>(){}.getType();
    }
    
    if ("CsApiTrip".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTrip>>(){}.getType();
    }
    
    if ("CsApiTripCoordinate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiTripCoordinate>>(){}.getType();
    }
    
    if ("CsApiUpdateJobCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateJobCodeRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateMyProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateMyProfileRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateOrganisationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateOrganisationRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateOrganisationResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateOrganisationResponse>>(){}.getType();
    }
    
    if ("CsApiUpdateProjectRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateProjectRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateTaskRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateTaskRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateUserRequest>>(){}.getType();
    }
    
    if ("CsApiUpdateUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUpdateUserResponse>>(){}.getType();
    }
    
    if ("CsApiUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUserForManagement>>(){}.getType();
    }
    
    if ("CsApiUserHourlyRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUserHourlyRate>>(){}.getType();
    }
    
    if ("CsApiUserJobFavourite".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUserJobFavourite>>(){}.getType();
    }
    
    if ("CsApiUserProfile".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUserProfile>>(){}.getType();
    }
    
    if ("CsApiUsualHoursDay".equalsIgnoreCase(className)) {
      return new TypeToken<List<CsApiUsualHoursDay>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CsApiAggregateJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiAggregateJobCode>(){}.getType();
    }
    
    if ("CsApiAggregateJobTask".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiAggregateJobTask>(){}.getType();
    }
    
    if ("CsApiApiResponseBoolean".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseBoolean>(){}.getType();
    }
    
    if ("CsApiApiResponseClient".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseClient>(){}.getType();
    }
    
    if ("CsApiApiResponseCombinedReportsData".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseCombinedReportsData>(){}.getType();
    }
    
    if ("CsApiApiResponseDoLoginResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseDoLoginResponse>(){}.getType();
    }
    
    if ("CsApiApiResponseFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseFleetVehicle>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListOrgReportTimesheetFileAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseForPaginatedListOrgReportTimesheetFileAttachment>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListOrgReportTrip".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseForPaginatedListOrgReportTrip>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListRawReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseForPaginatedListRawReportItem>(){}.getType();
    }
    
    if ("CsApiApiResponseForPaginatedListTrip".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseForPaginatedListTrip>(){}.getType();
    }
    
    if ("CsApiApiResponseInsertUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseInsertUserResponse>(){}.getType();
    }
    
    if ("CsApiApiResponseInt32".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseInt32>(){}.getType();
    }
    
    if ("CsApiApiResponseJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseJobCode>(){}.getType();
    }
    
    if ("CsApiApiResponseListAggregateJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListAggregateJobCode>(){}.getType();
    }
    
    if ("CsApiApiResponseListClient".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListClient>(){}.getType();
    }
    
    if ("CsApiApiResponseListFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListFleetVehicle>(){}.getType();
    }
    
    if ("CsApiApiResponseListInt32".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListInt32>(){}.getType();
    }
    
    if ("CsApiApiResponseListJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListJobCode>(){}.getType();
    }
    
    if ("CsApiApiResponseListJobSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListJobSeriesReportItem>(){}.getType();
    }
    
    if ("CsApiApiResponseListOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListOrganisationGroup>(){}.getType();
    }
    
    if ("CsApiApiResponseListProject".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListProject>(){}.getType();
    }
    
    if ("CsApiApiResponseListProjectCostingReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListProjectCostingReportItem>(){}.getType();
    }
    
    if ("CsApiApiResponseListTimesheet".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListTimesheet>(){}.getType();
    }
    
    if ("CsApiApiResponseListTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListTimesheetTask>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListUserForManagement>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserHourlyRate".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListUserHourlyRate>(){}.getType();
    }
    
    if ("CsApiApiResponseListUserJobFavourite".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListUserJobFavourite>(){}.getType();
    }
    
    if ("CsApiApiResponseListUsualHoursDay".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseListUsualHoursDay>(){}.getType();
    }
    
    if ("CsApiApiResponseOrganisation".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseOrganisation>(){}.getType();
    }
    
    if ("CsApiApiResponseOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseOrganisationGroup>(){}.getType();
    }
    
    if ("CsApiApiResponseProject".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseProject>(){}.getType();
    }
    
    if ("CsApiApiResponseSignupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseSignupResponse>(){}.getType();
    }
    
    if ("CsApiApiResponseTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseTimesheetTask>(){}.getType();
    }
    
    if ("CsApiApiResponseTrip".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseTrip>(){}.getType();
    }
    
    if ("CsApiApiResponseUpdateOrganisationResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseUpdateOrganisationResponse>(){}.getType();
    }
    
    if ("CsApiApiResponseUpdateUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseUpdateUserResponse>(){}.getType();
    }
    
    if ("CsApiApiResponseUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseUserForManagement>(){}.getType();
    }
    
    if ("CsApiApiResponseUserProfile".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiApiResponseUserProfile>(){}.getType();
    }
    
    if ("CsApiBatchUpdateTimesheetRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiBatchUpdateTimesheetRequest>(){}.getType();
    }
    
    if ("CsApiClient".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiClient>(){}.getType();
    }
    
    if ("CsApiClientSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiClientSeriesReportItem>(){}.getType();
    }
    
    if ("CsApiClientSideUser".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiClientSideUser>(){}.getType();
    }
    
    if ("CsApiClientTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiClientTotalsReportItem>(){}.getType();
    }
    
    if ("CsApiCombinedReportsData".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiCombinedReportsData>(){}.getType();
    }
    
    if ("CsApiCreateTripRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiCreateTripRequest>(){}.getType();
    }
    
    if ("CsApiDoLoginRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiDoLoginRequest>(){}.getType();
    }
    
    if ("CsApiDoLoginResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiDoLoginResponse>(){}.getType();
    }
    
    if ("CsApiFleetVehicle".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiFleetVehicle>(){}.getType();
    }
    
    if ("CsApiInsertClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertClientRequest>(){}.getType();
    }
    
    if ("CsApiInsertJobCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertJobCodeRequest>(){}.getType();
    }
    
    if ("CsApiInsertOrganisationGroupRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertOrganisationGroupRequest>(){}.getType();
    }
    
    if ("CsApiInsertProjectRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertProjectRequest>(){}.getType();
    }
    
    if ("CsApiInsertTaskRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertTaskRequest>(){}.getType();
    }
    
    if ("CsApiInsertUserHourlyRateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertUserHourlyRateRequest>(){}.getType();
    }
    
    if ("CsApiInsertUserJobFavouriteRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertUserJobFavouriteRequest>(){}.getType();
    }
    
    if ("CsApiInsertUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertUserRequest>(){}.getType();
    }
    
    if ("CsApiInsertUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertUserResponse>(){}.getType();
    }
    
    if ("CsApiInsertVehicleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiInsertVehicleRequest>(){}.getType();
    }
    
    if ("CsApiJobCode".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiJobCode>(){}.getType();
    }
    
    if ("CsApiJobSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiJobSeriesReportItem>(){}.getType();
    }
    
    if ("CsApiJobTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiJobTotalsReportItem>(){}.getType();
    }
    
    if ("CsApiOrgReportTimesheetFileAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiOrgReportTimesheetFileAttachment>(){}.getType();
    }
    
    if ("CsApiOrgReportTrip".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiOrgReportTrip>(){}.getType();
    }
    
    if ("CsApiOrganisation".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiOrganisation>(){}.getType();
    }
    
    if ("CsApiOrganisationGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiOrganisationGroup>(){}.getType();
    }
    
    if ("CsApiProject".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiProject>(){}.getType();
    }
    
    if ("CsApiProjectCostingReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiProjectCostingReportItem>(){}.getType();
    }
    
    if ("CsApiProjectSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiProjectSeriesReportItem>(){}.getType();
    }
    
    if ("CsApiProjectTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiProjectTotalsReportItem>(){}.getType();
    }
    
    if ("CsApiRawReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiRawReportItem>(){}.getType();
    }
    
    if ("CsApiSaveClientRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSaveClientRequest>(){}.getType();
    }
    
    if ("CsApiSaveOrganisationGroupRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSaveOrganisationGroupRequest>(){}.getType();
    }
    
    if ("CsApiSaveVehicleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSaveVehicleRequest>(){}.getType();
    }
    
    if ("CsApiSetOrganisationGroupUsersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSetOrganisationGroupUsersRequest>(){}.getType();
    }
    
    if ("CsApiSetUsualHoursRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSetUsualHoursRequest>(){}.getType();
    }
    
    if ("CsApiSignupResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiSignupResponse>(){}.getType();
    }
    
    if ("CsApiTaskSeriesReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTaskSeriesReportItem>(){}.getType();
    }
    
    if ("CsApiTaskTotalsReportItem".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTaskTotalsReportItem>(){}.getType();
    }
    
    if ("CsApiTimeSlot".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTimeSlot>(){}.getType();
    }
    
    if ("CsApiTimesheet".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTimesheet>(){}.getType();
    }
    
    if ("CsApiTimesheetTask".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTimesheetTask>(){}.getType();
    }
    
    if ("CsApiTrip".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTrip>(){}.getType();
    }
    
    if ("CsApiTripCoordinate".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiTripCoordinate>(){}.getType();
    }
    
    if ("CsApiUpdateJobCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateJobCodeRequest>(){}.getType();
    }
    
    if ("CsApiUpdateMyProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateMyProfileRequest>(){}.getType();
    }
    
    if ("CsApiUpdateOrganisationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateOrganisationRequest>(){}.getType();
    }
    
    if ("CsApiUpdateOrganisationResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateOrganisationResponse>(){}.getType();
    }
    
    if ("CsApiUpdateProjectRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateProjectRequest>(){}.getType();
    }
    
    if ("CsApiUpdateTaskRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateTaskRequest>(){}.getType();
    }
    
    if ("CsApiUpdateUserRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateUserRequest>(){}.getType();
    }
    
    if ("CsApiUpdateUserResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUpdateUserResponse>(){}.getType();
    }
    
    if ("CsApiUserForManagement".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUserForManagement>(){}.getType();
    }
    
    if ("CsApiUserHourlyRate".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUserHourlyRate>(){}.getType();
    }
    
    if ("CsApiUserJobFavourite".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUserJobFavourite>(){}.getType();
    }
    
    if ("CsApiUserProfile".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUserProfile>(){}.getType();
    }
    
    if ("CsApiUsualHoursDay".equalsIgnoreCase(className)) {
      return new TypeToken<CsApiUsualHoursDay>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
